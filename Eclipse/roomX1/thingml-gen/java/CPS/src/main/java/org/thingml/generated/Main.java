/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;
import org.thingml.generated.gui.*;
public class Main {
//Things
public static Thermometers Thermometers_term;
public static MotionDetectors MotionDetectors_motion;
public static HumanMock Human_myself;
public static PIM PIM_pim;
public static void main(String args[]) {
//Things
Thermometers_term = (Thermometers) new Thermometers();
Thermometers_term.buildBehavior(null, null);
Thermometers_term.init();
MotionDetectors_motion = (MotionDetectors) new MotionDetectors();
MotionDetectors_motion.buildBehavior(null, null);
MotionDetectors_motion.init();
Human_myself = (HumanMock) new HumanMock("Human_myself").buildBehavior(null, null);
PIM_pim = (PIM) new PIM();
PIM_pim.buildBehavior(null, null);
PIM_pim.init();
//Connecting internal ports...
//Connectors
Thermometers_term.getTemprature_port().addListener(PIM_pim.getTemprature_port());
Human_myself.getSend_cmd_port().addListener(PIM_pim.getHuman_input_port());
Human_myself.getSend_cmd_port().addListener(MotionDetectors_motion.getSetup_port());
Human_myself.getSend_cmd_port().addListener(Thermometers_term.getSetup_port());
MotionDetectors_motion.getMotions_port().addListener(PIM_pim.getMotions_port());
//Init instances (queues, etc)
//Network components for external connectors
/*$NETWORK$*/
//External Connectors
/*$EXT CONNECTORS$*/
/*$START$*/
PIM_pim.start();
Thermometers_term.start();
MotionDetectors_motion.start();
Human_myself.start();
//Hook to stop instances following client/server dependencies (clients firsts)
Runtime.getRuntime().addShutdownHook(new Thread() {
public void run() {
Human_myself.stop();
MotionDetectors_motion.stop();
Thermometers_term.stop();
PIM_pim.stop();
/*$STOP$*/
}
});

}
}
